name: Python App CI
on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python_ci.yml'
env:
  WORKING_DIR: app_python
  DOCKER_IMAGE_NAME: app-python
  DOCKER_IMAGE_TAG: latest

jobs:
 security:
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --file=${{ env.WORKING_DIR}}/requirements.txt --package-manager=pip --skip-unresolved
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  build-test:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      matrix:
        python-version: ['3.10', '3.9']
    defaults:
      run:
        working-directory: ./${{ env.WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
       
      - name: Linter checking
        run: flake8 *.py 
        
      - name: Run tests 
        run: python -m pytest
      
  release:
    timeout-minutes: 30
    permissions:
      contents: read
    needs:
      - build-and-test
      - security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIR }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{
            env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max